\npackage com.scalesec.vulnado;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.beans.factory.annotation.*;\nimport org.springframework.boot.autoconfigure.*;\nimport java.util.List;\nimport java.io.Serializable;\n\n@RestController\n@EnableAutoConfiguration\npublic class CommentsController {\n\n    @Value(\"${app.secret}\")\n    private String secret;\n\n    @CrossOrigin(origins = \"*\")\n    @GetMapping(value = \"/comments\", produces = \"application/json\")\n    List\u003cComment\u003e comments(@RequestHeader(value=\"x-auth-token\") String token) {\n        User.assertAuth(secret, token);\n        return Comment.fetch_all();\n    }\n\n    @CrossOrigin(origins = \"*\")\n    @PostMapping(value = \"/comments\", produces = \"application/json\", consumes = \"application/json\")\n    Comment createComment(@RequestHeader(value=\"x-auth-token\") String token, @RequestBody CommentRequest input) {\n        return Comment.create(input.getUsername(), input.getBody());\n    }\n\n    @CrossOrigin(origins = \"*\")\n    @DeleteMapping(value = \"/comments/{id}\", produces = \"application/json\")\n    Boolean deleteComment(@RequestHeader(value=\"x-auth-token\") String token, @PathVariable(\"id\") String id) {\n        return Comment.delete(id);\n    }\n}\n\nclass CommentRequest implements Serializable {\n    private String username;\n    private String body;\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getBody() {\n        return body;\n    }\n\n    public void setBody(String body) {\n        this.body = body;\n    }\n}\n\n@ResponseStatus(HttpStatus.BAD_REQUEST)\nclass BadRequest extends RuntimeException {\n    public BadRequest(String exception) {\n        super(exception);\n    }\n}\n\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\nclass ServerError extends RuntimeException {\n    public ServerError(String exception) {\n        super(exception);\n    }\n}\n